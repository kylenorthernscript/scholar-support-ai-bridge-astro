name: Claude Code Action

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

permissions:
  contents: read
  issues: write

jobs:
  claude-response:
    runs-on: ubuntu-latest
    
    steps:
      - name: Claude API Response
        uses: actions/github-script@v7
        with:
          script: |
            let requestText = '';
            let issueNumber = null;
            
            if (context.eventName === 'issues') {
              requestText = context.payload.issue.body || '';
              issueNumber = context.payload.issue.number;
            } else if (context.eventName === 'issue_comment') {
              requestText = context.payload.comment.body || '';
              issueNumber = context.payload.issue.number;
            }
            
            console.log('Event:', context.eventName);
            console.log('Request text:', requestText);
            console.log('Issue number:', issueNumber);
            
            if (!requestText.includes('@claude')) {
              console.log('No @claude mention found');
              return;
            }
            
            const claudeIndex = requestText.indexOf('@claude');
            const actualRequest = requestText.substring(claudeIndex + 7).trim();
            
            console.log('Actual request:', actualRequest);
            
            try {
              const response = await fetch('https://api.anthropic.com/v1/messages', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'x-api-key': process.env.ANTHROPIC_API_KEY,
                  'anthropic-version': '2023-06-01'
                },
                body: JSON.stringify({
                  model: 'claude-3-sonnet-20240229',
                  max_tokens: 1024,
                  messages: [{
                    role: 'user',
                    content: `You are helping with the Theta Clinical Support project. This is an Astro + React + Tailwind CSS project.

Request: ${actualRequest}`
                  }]
                })
              });
              
              if (!response.ok) {
                throw new Error(`Claude API error: ${response.status}`);
              }
              
              const data = await response.json();
              const claudeResponse = data.content[0].text;
              
              if (issueNumber) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: `ü§ñ **Claude Response:**\\n\\n${claudeResponse}\\n\\n---\\n*Powered by Claude Code integration*`
                });
              }
            } catch (error) {
              console.error('Error:', error);
              if (issueNumber) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: `‚ùå Error processing Claude request: ${error.message}`
                });
              }
            }
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}