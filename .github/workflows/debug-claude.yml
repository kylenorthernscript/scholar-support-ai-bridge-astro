name: Debug Claude Trigger

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

permissions:
  contents: read
  issues: write

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Trigger Conditions
        uses: actions/github-script@v7
        with:
          script: |
            console.log('=== Debug Information ===');
            console.log('Event name:', context.eventName);
            console.log('Event action:', context.payload.action);
            
            let bodyText = '';
            let issueNumber = null;
            
            if (context.eventName === 'issues') {
              bodyText = context.payload.issue.body || '';
              issueNumber = context.payload.issue.number;
              console.log('Issues event - Issue body:', bodyText);
            } else if (context.eventName === 'issue_comment') {
              bodyText = context.payload.comment.body || '';
              issueNumber = context.payload.issue.number;
              console.log('Comment event - Comment body:', bodyText);
            }
            
            console.log('Contains @claude:', bodyText.includes('@claude'));
            console.log('github.event_name == "issues":', context.eventName === 'issues');
            console.log('github.event_name == "issue_comment":', context.eventName === 'issue_comment');
            
            // Test the exact condition from the main workflow
            const issuesCondition = (context.eventName === 'issues' && (context.payload.issue.body || '').includes('@claude'));
            const commentCondition = (context.eventName === 'issue_comment' && (context.payload.comment.body || '').includes('@claude'));
            
            console.log('Issues condition result:', issuesCondition);
            console.log('Comment condition result:', commentCondition);
            console.log('Should trigger main workflow:', issuesCondition || commentCondition);
            
            if (issueNumber) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `üîç **Debug Results**
                
**Event:** ${context.eventName}
**Action:** ${context.payload.action}
**Body text:** "${bodyText}"
**Contains @claude:** ${bodyText.includes('@claude')}
**Should trigger main workflow:** ${issuesCondition || commentCondition}

**Condition breakdown:**
- Issues condition: ${issuesCondition}
- Comment condition: ${commentCondition}`
              });
            }