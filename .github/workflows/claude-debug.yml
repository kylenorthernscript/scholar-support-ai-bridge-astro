name: Claude Debug

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  debug-claude:
    runs-on: ubuntu-latest
    
    steps:
      - name: Debug Event Information
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Event name:', context.eventName);
            console.log('Event action:', context.payload.action);
            
            if (context.eventName === 'issues') {
              console.log('Issue body:', context.payload.issue?.body || 'No body');
              console.log('Contains @claude:', (context.payload.issue?.body || '').includes('@claude'));
            }
            
            if (context.eventName === 'issue_comment') {
              console.log('Comment body:', context.payload.comment?.body || 'No body');
              console.log('Contains @claude:', (context.payload.comment?.body || '').includes('@claude'));
            }
            
            console.log('Full payload:', JSON.stringify(context.payload, null, 2));

  claude-response:
    runs-on: ubuntu-latest
    needs: debug-claude
    if: always()
    
    steps:
      - name: Always Respond
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = github;
            
            let issueNumber;
            let shouldRespond = false;
            let eventDetails = '';
            
            if (context.eventName === 'issues') {
              issueNumber = context.payload.issue?.number;
              const body = context.payload.issue?.body || '';
              shouldRespond = body.includes('@claude');
              eventDetails = `Issue event - Contains @claude: ${shouldRespond}`;
            } else if (context.eventName === 'issue_comment') {
              issueNumber = context.payload.issue?.number;
              const body = context.payload.comment?.body || '';
              shouldRespond = body.includes('@claude');
              eventDetails = `Comment event - Contains @claude: ${shouldRespond}`;
            } else if (context.eventName === 'workflow_dispatch') {
              // For manual testing, respond to latest issue
              shouldRespond = true;
              eventDetails = 'Manual workflow dispatch';
            }
            
            if (issueNumber || context.eventName === 'workflow_dispatch') {
              const commentBody = `ü§ñ **Claude Code Debug Response**
              
              **Event Details:**
              - Event: ${context.eventName}
              - Action: ${context.payload.action || 'N/A'}
              - ${eventDetails}
              
              **Claude Code Integration Status:**
              ${shouldRespond ? '‚úÖ @claude detected - Integration ready!' : '‚ùå No @claude mention found'}
              
              **Project: Theta Clinical Support**
              - Framework: Astro + React + Tailwind CSS
              - Repository: Ready for Claude Code development
              
              **Test with:** Create an issue or comment with "@claude" mention
              
              Debug timestamp: ${new Date().toISOString()}`;
              
              if (issueNumber) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: commentBody
                });
              }
            }